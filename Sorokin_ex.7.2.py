# ### 7.2 Проверка ИНН
#
# Задание: Проверка валидности 10-значных ИНН выполняется по следующему алгоритму:
#
# 1. Вычисляется контрольная сумма всех знаков со следующими весовыми коэффициентами: (2,4,10,3,5,9,4,6,8,0)
# 2. Вычисляется контрольное число как остаток от деления контрольной суммы на 11
# 3. Если контрольное число больше 9, то контрольное число вычисляется как остаток от деления контрольного числа на 10
# 4. Контрольное число сравнивается с десятым знаком ИНН. В случае их равенства ИНН считается правильным.
#
# Необходимо написать функцию validate_inn, принимающую на вход строку символов
# и возвращающую True, если строка является валидным 10-значным ИНН, и False в противном случае.
#
# Условие: Входная строка может содержать произвольные символы.
# Если в строке встречаются какие-либо символы кроме 10 арабских цифр, функция
# должна возвратить False. Допускаются пробелы перед цифрами ИНН и после них
#
# Пример вызова 1:
# >>> validate_inn(' 4459442265 '))
# True
#
#
# Пример вызова 2:
# >>> validate_inn('7743013902'))
# False
#
#
# ### Для справки:
#
# Алгоритм проверки ИНН физ. лиц (12 знаков):
#
# 1. Вычисляется контрольная сумма первых 11 знаков со следующими весовыми коэффициентами: (7,2,4,10,3,5,9,4,6,8,0).
# 2. Вычисляется контрольное число1 как остаток от деления контрольной суммы на 11.
# 3. Если контрольное число1 больше 9, то контрольное число1 вычисляется как остаток от деления контрольного числа1 на 10.
# 4. Вычисляется контрольная сумма всех 12 знаков со следующими весовыми коэффициентами: (3,7,2,4,10,3,5,9,4,6,8,0).
# 5. Вычисляется контрольное число2 как остаток от деления контрольной суммы на 11.
# 6. Если контрольное число2 больше 9, то контрольное число2 вычисляется как остаток от деления контрольного числа2 на 10.
# 7. Контрольное число1 сравнивается с одиннадцатым знаком ИНН, контрольное число2 сравнивается с двенадцатым знаком ИНН. В случае их равенства ИНН считается правильным.
#
#
# NB: при разночтениях с LMS версия задачи у бота - более точная.

def validate_inn(inputs):
    inputs=inputs.lstrip().rstrip()
    if len(inputs)!=10:
        return False
    if not inputs.isdigit():
        return False
    coef=[2,4,10,3,5,9,4,6,8,0]
    # создание списка цифр из первых 10 символов
    inn_num = [int(x) for x in inputs[0:10]]
    i=0
    chksum=0
    for number in inn_num:
        chksum += number*coef[i]
        i += 1
    ctrl_num = chksum%11
    if ctrl_num > 9:
        ctrl_num = ctrl_num%10
    if int(ctrl_num) == int(inputs[9]):
        return True
    else:
        return False

