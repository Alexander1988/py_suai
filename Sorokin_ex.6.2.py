# ### 6.2 Словарь наоборот
#
# Задание: Напишите функцию, которая выполняет "обратный перевод" словаря, то есть
# меняет местами ключи и значения в словаре. Если значения различных ключей
# исходного словаря повторяются {'c': 3, 'd': 3}, то в обращённом словаре
# соответствую ключ 3 должен получить значение типа set: {3: {'c', 'd'}},
# элементы которого являются всеми ключами, имевшими данное значение.
# В противном случае тип значения должен быть таким же,
# как тип ключа исходного словаря.
#
# Условия:
# - Функция должна называться inverse_dict, принимать единственный параметр типа dict и возвращать значение типа dict.
# - В ходе выполнения функции inverse_dict исходный словарь не должен меняться
#
# Пример вызова 1:
# >>> d = {'гриб': 'подосиновик', 'ягода': 'малина', 'Дерево': 'дуб', 'Трава': 'осока'}
# >>> print(inverse_dict(d))
# {'подосиновик': 'гриб', 'малина': 'ягода', 'дуб': 'Дерево', 'осока': 'Трава'}
#
#
# Пример вызова 2:
# >>> d = {'a': 1, 'b': 2, 'c': 3, 'd': 3}
# >>> print(inverse_dict(d))
# {1: 'a', 2: 'b', 3: {'c', 'd'}}
#
#
# NB: при разночтениях с LMS версия задачи у бота - более точная.


def inverse_dict(d):
    newdict = {}
    for key, val in d.items():
        if val not in newdict:
            newdict[val] = key
        else:
            newdict[val] = set((*newdict[val], key))
    return newdict

# print(inverse_dict({'a': 1, 'b': 2, 'c': 3, 'd': 3, 'e':3}))
